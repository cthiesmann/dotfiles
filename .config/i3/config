# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8
# Remove titles
new_window 1pixel

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use 
# from the generated scheme.
# NOTE: The '#f0f0f0' in the lines below is the color i3 will use if
# it fails to get colors from Xresources.
set_from_resource $color15 i3wm.color15 #f0f0f0
set_from_resource $color14 i3wm.color14 #f0f0f0
set_from_resource $color13 i3wm.color12 #f0f0f0
set_from_resource $color12 i3wm.color12 #f0f0f0
set_from_resource $color11 i3wm.color11 #f0f0f0
set_from_resource $color10 i3wm.color10 #f0f0f0
set_from_resource $color9 i3wm.color9 #f0f0f0
set_from_resource $color8 i3wm.color8 #f0f0f0
set_from_resource $color7 i3wm.color7 #f0f0f0
set_from_resource $color6 i3wm.color6 #f0f0f0
set_from_resource $color5 i3wm.color5 #f0f0f0
set_from_resource $color4 i3wm.color4 #f0f0f0
set_from_resource $color3 i3wm.color3 #f0f0f0
set_from_resource $color2 i3wm.color2 #f0f0f0
set_from_resource $color1 i3wm.color1 #f0f0f0
set_from_resource $color0 i3wm.color0 #f0f0f0

set_from_resource $fg i3wm.foreground #f0f0f0
set_from_resource $bg i3wm.background #f0f0f0

# class                 border  backgr. text indicator 	child_border
client.focused          $color5     $bg     $fg  $color5				$color5
client.focused_inactive $bg     $bg     $fg  $bg       	$bg
client.unfocused        $bg     $bg     $fg  $bg       	$bg
client.urgent           $bg     $bg     $fg  $bg       	$bg
client.placeholder      $bg     $bg     $fg  $bg       	$bg

client.background       $bg

# PROTIP: You can also dynamically set dmenu's colors this way:
# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run -nb "$bg" -nf "$fg" -sb "$color4" -sf "$color6"
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

set $scr1 DP-0
set $scr2 DVI-D-0

workspace $ws1 output $scr1
workspace $ws2 output $scr1
workspace $ws3 output $scr1
workspace $ws4 output $scr1
workspace $ws5 output $scr1
workspace $ws6 output $scr2
workspace $ws7 output $scr2
workspace $ws8 output $scr2
workspace $ws9 output $scr2
workspace $ws10 output $scr2

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym l resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym h resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
        tray_output primary
	colors {
        	background $bg
        	statusline $fg 
        	focused_workspace  $color5 $color3 $fg 
    	}
}

# Network Manager systray
exec nm-applet

# Soundbar systray
exec pasystray

# Bluetooth systray
exec blueman-applet

# Keyboard layout workaround
exec setxkbmap us

# i3lock
exec --no-startup-id xauthlock -time 10 -locker i3lock -i ~/Downloads/desktop.png

bindsym $mod+Mod1+l exec i3lock -i ~/Downloads/desktop.png

# pywal use last color scheme
#exec wal -R -n

# feh background image
exec ~/.fehbg &

# i3 gaps
gaps inner 0
gaps outer 0
smart_gaps on

# keepass
bindsym $mod+Shift+Return exec keepass --auto-type

# scrot
bindsym Print --release exec bash -ic scrotclip 

# dunst
exec dunst

# Playerctl
bindsym $mod+p exec playerctl next
bindsym $mod+n exec playerctl previous
bindsym $mod+space exec playerctl play-pause

# Secret!
# Always ontop
bindsym $mod+t sticky toggle
# Mark the currently focused window secret
bindsym $mod+Shift+minus mark secret; [con_mark="secret"] move scratchpad
# Show the scratchpad window marked secret
bindsym $mod+minus [con_mark="secret"] scratchpad show; focus mode_toggle

# Program workspace assignments
assign [class="firefox"] $ws3
assign [class="discord"] $ws10
assign [class="skypeforlinux"] $ws10
assign [class="whats-app-nativefier"] $ws10
